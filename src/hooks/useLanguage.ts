import { useState, useEffect, useContext } from 'react';
import { supabase } from '../lib/supabase';

interface Translation {
  key: string;
  language_code: string;
  text: string;
  category: string;
}

export interface LanguageConfig {
  code: string;
  name: string;
  nativeName: string;
  flag: string;
}

export interface LanguageContextType {
  currentLanguage: string;
  translations: Record<string, string>;
  loading: boolean;
  error: string | null;
  changeLanguage: (languageCode: string) => Promise<void>;
  t: (key: string, fallback?: string) => string;
  isRTL: boolean;
  supportedLanguages: LanguageConfig[];
}

// Import the context from the proper location
import { LanguageContext } from '../context/LanguageContext';
import { safeQuery } from '../lib/supabase';

const AVAILABLE_LANGUAGES: LanguageConfig[] = [
  { code: 'en', name: 'English', nativeName: 'English', flag: 'üá∫üá∏' },
  { code: 'it', name: 'Italian', nativeName: 'Italiano', flag: 'üáÆüáπ' },
  { code: 'de', name: 'German', nativeName: 'Deutsch', flag: 'üá©üá™' },
  { code: 'fr', name: 'French', nativeName: 'Fran√ßais', flag: 'üá´üá∑' },
  { code: 'es', name: 'Spanish', nativeName: 'Espa√±ol', flag: 'üá™üá∏' },
  { code: 'ru', name: 'Russian', nativeName: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
];

// RTL languages
const RTL_LANGUAGES = ['ar', 'he', 'fa', 'ur'];

// Fallback translations for critical UI elements
const FALLBACK_TRANSLATIONS: Record<string, Record<string, string>> = {
  en: {
    'nav.home': 'Home',
    'nav.services': 'Services',
    'nav.events': 'Events',
    'nav.contact': 'Contact',
    'nav.book_now': 'Book Now',
    'common.loading': 'Loading...',
    'common.error': 'Error',
    'common.retry': 'Retry',
    'form.name': 'Name',
    'form.email': 'Email',
    'form.phone': 'Phone',
    'form.message': 'Message',
    'form.submit': 'Send Message',
  },
  it: {
    'nav.home': 'Home',
    'nav.services': 'Servizi',
    'nav.events': 'Eventi',
    'nav.contact': 'Contatti',
    'nav.book_now': 'Prenota Ora',
    'common.loading': 'Caricamento...',
    'common.error': 'Errore',
    'common.retry': 'Riprova',
    'form.name': 'Nome',
    'form.email': 'Email',
    'form.phone': 'Telefono',
    'form.message': 'Messaggio',
    'form.submit': 'Invia Messaggio',
  },
  de: {
    'nav.home': 'Startseite',
    'nav.services': 'Dienstleistungen',
    'nav.events': 'Veranstaltungen',
    'nav.contact': 'Kontakt',
    'nav.book_now': 'Jetzt Buchen',
    'common.loading': 'Laden...',
    'common.error': 'Fehler',
    'common.retry': 'Wiederholen',
    'form.name': 'Name',
    'form.email': 'E-Mail',
    'form.phone': 'Telefon',
    'form.message': 'Nachricht',
    'form.submit': 'Nachricht Senden',
  },
  fr: {
    'nav.home': 'Accueil',
    'nav.services': 'Services',
    'nav.events': '√âv√©nements',
    'nav.contact': 'Contact',
    'nav.book_now': 'R√©server',
    'common.loading': 'Chargement...',
    'common.error': 'Erreur',
    'common.retry': 'R√©essayer',
    'form.name': 'Nom',
    'form.email': 'E-mail',
    'form.phone': 'T√©l√©phone',
    'form.message': 'Message',
    'form.submit': 'Envoyer le Message',
    'home.hero.price_description': 'par personne ‚Ä¢ Exp√©rience journ√©e compl√®te',
    'home.hero.feature1': 'Format de r√©gate r√©el',
    'home.hero.feature2': 'Skipper professionnel sur chaque bateau',
    'home.hero.feature3': 'Ouvert √† tous les niveaux - aucune exp√©rience n√©cessaire',
    'home.hero.feature4': 'Photos et vid√©os professionnelles de la course',
    'home.hero.feature5': 'Tout l\'√©quipement fourni',
    'home.features.item1.title': 'Format de R√©gate R√©el',
    'home.features.item1.description': 'Authentique r√©gate de yacht avec dynamique d\'√©quipe, m√©dailles et vraie comp√©tition.',
    'home.features.item2.title': 'Skipper Professionnel',
    'home.features.item2.description': 'Capitaines de voile certifi√©s et exp√©riment√©s sur chaque bateau.',
    'home.features.item3.title': 'Photo & Vid√©o',
    'home.features.item3.description': 'Photos et vid√©os professionnelles de votre journ√©e de course √† retenir et √† partager.',
    'home.features.item4.title': 'Enti√®rement Assur√©',
    'home.features.item4.description': 'Couverture de s√©curit√© compl√®te et √©quipement moderne inclus.',
    'home.features.item5.title': 'Accessible et Premium',
    'home.features.item5.description': 'Une exp√©rience de r√©gate de haut niveau ouverte √† tous - aucune exp√©rience n√©cessaire.',
    'home.experience.step1.title': 'Briefing du Matin',
    'home.experience.step1.description': 'Rencontrez votre skipper professionnel et apprenez les bases de la course de yacht dans un environnement d√©tendu et amical.',
    'home.experience.step2.title': 'Exp√©rience de Course',
    'home.experience.step2.description': 'Participez √† d'authentiques courses de yacht avec d'autres bateaux, en vivant le frisson de la comp√©tition sur le magnifique lac de Garde.',
    'home.experience.step3.title': 'C√©r√©monie des M√©dailles',
    'home.experience.step3.description': 'C√©l√©brez votre r√©ussite avec une c√©r√©monie officielle de remise des m√©dailles et recevez votre certificat de course personnalis√©.'
  },
  es: {
    'nav.home': 'Inicio',
    'nav.services': 'Servicios',
    'nav.events': 'Eventos',
    'nav.contact': 'Contacto',
    'nav.book_now': 'Reservar',
    'common.loading': 'Cargando...',
    'common.error': 'Error',
    'common.retry': 'Reintentar',
    'form.name': 'Nombre',
    'form.email': 'Correo electr√≥nico',
    'form.phone': 'Tel√©fono',
    'form.message': 'Mensaje',
    'form.submit': 'Enviar Mensaje',
    'home.hero.price_description': 'por persona ‚Ä¢ Experiencia de d√≠a completo',
    'home.hero.feature1': 'Formato de regata real',
    'home.hero.feature2': 'Patr√≥n profesional en cada barco',
    'home.hero.feature3': 'Abierto a todos los niveles - no se necesita experiencia',
    'home.hero.feature4': 'Fotos y videos profesionales de la regata',
    'home.hero.feature5': 'Todo el equipamiento incluido',
    'home.features.item1.title': 'Formato de Regata Real',
    'home.features.item1.description': 'Aut√©ntica regata de yates con din√°mica de equipo, medallas y verdadera competici√≥n.',
    'home.features.item2.title': 'Patr√≥n Profesional',
    'home.features.item2.description': 'Capitanes de vela certificados y experimentados en cada barco.',
    'home.features.item3.title': 'Foto y Video',
    'home.features.item3.description': 'Fotos y videos profesionales de su d√≠a de regata para recordar y compartir.',
    'home.features.item4.title': 'Totalmente Asegurado',
    'home.features.item4.description': 'Cobertura de seguridad completa y equipo moderno incluido.',
    'home.features.item5.title': 'Accesible y Premium',
    'home.features.item5.description': 'Una experiencia de regata de alto nivel abierta a todos - no se necesita experiencia.',
    'home.experience.step1.title': 'Briefing Matutino',
    'home.experience.step1.description': 'Conozca a su patr√≥n profesional y aprenda los conceptos b√°sicos de las regatas de yates en un ambiente relajado y amigable.',
    'home.experience.step2.title': 'Experiencia de Regata',
    'home.experience.step2.description': 'Participe en aut√©nticas regatas de yates con otros barcos, experimentando la emoci√≥n de la competici√≥n en el hermoso lago de Garda.',
    'home.experience.step3.title': 'Ceremonia de Medallas',
    'home.experience.step3.description': 'Celebre su logro con una ceremonia oficial de medallas y reciba su certificado de regata personalizado.'
  },
  ru: {
    'nav.home': '–ì–ª–∞–≤–Ω–∞—è',
    'nav.services': '–£—Å–ª—É–≥–∏',
    'nav.events': '–°–æ–±—ã—Ç–∏—è',
    'nav.contact': '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
    'nav.book_now': '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å',
    'common.loading': '–ó–∞–≥—Ä—É–∑–∫–∞...',
    'common.error': '–û—à–∏–±–∫–∞',
    'common.retry': '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å',
    'home.hero.price_description': '–Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ ‚Ä¢ –û–ø—ã—Ç –Ω–∞ —Ü–µ–ª—ã–π –¥–µ–Ω—å',
    'home.hero.feature1': '–ù–∞—Å—Ç–æ—è—â–∏–π —Ñ–æ—Ä–º–∞—Ç –≥–æ–Ω–∫–∏ –Ω–∞ —è—Ö—Ç–∞—Ö',
    'home.hero.feature2': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —à–∫–∏–ø–µ—Ä –Ω–∞ –∫–∞–∂–¥–æ–π –ª–æ–¥–∫–µ',
    'home.hero.feature3': '–û—Ç–∫—Ä—ã—Ç–æ –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π –Ω–∞–≤—ã–∫–æ–≤ ‚Äì –æ–ø—ã—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è',
    'home.hero.feature4': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ —Å –≥–æ–Ω–∫–∏',
    'home.hero.feature5': '–í—Å—ë –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è',
    'home.features.item1.title': '–ù–∞—Å—Ç–æ—è—â–∏–π –§–æ—Ä–º–∞—Ç –ì–æ–Ω–∫–∏',
    'home.features.item1.description': '–ù–∞—Å—Ç–æ—è—â–∞—è —è—Ö—Ç–µ–Ω–Ω–∞—è —Ä–µ–≥–∞—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–Ω–æ–π –¥–∏–Ω–∞–º–∏–∫–æ–π, –º–µ–¥–∞–ª—è–º–∏ –∏ –Ω–∞—Å—Ç–æ—è—â–∏–º —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ–º.',
    'home.features.item2.title': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –®–∫–∏–ø–µ—Ä',
    'home.features.item2.description': '–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏ –æ–ø—ã—Ç–Ω—ã–µ –∫–∞–ø–∏—Ç–∞–Ω—ã –Ω–∞ –∫–∞–∂–¥–æ–π –ª–æ–¥–∫–µ.',
    'home.features.item3.title': '–§–æ—Ç–æ –∏ –í–∏–¥–µ–æ',
    'home.features.item3.description': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ —Å –≤–∞—à–µ–≥–æ –≥–æ–Ω–æ—á–Ω–æ–≥–æ –¥–Ω—è, —á—Ç–æ–±—ã –∑–∞–ø–æ–º–Ω–∏—Ç—å –∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è.',
    'home.features.item4.title': '–ü–æ–ª–Ω–æ—Å—Ç—å—é –ó–∞—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–æ',
    'home.features.item4.description': '–ü–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω—ã.',
    'home.experience.step1.description': '–ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –≤–∞—à–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —à–∫–∏–ø–µ—Ä–æ–º –∏ –∏–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã —è—Ö—Ç–µ–Ω–Ω—ã—Ö –≥–æ–Ω–æ–∫ –≤ –Ω–µ–ø—Ä–∏–Ω—É–∂–¥–µ–Ω–Ω–æ–π, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ.',
    'home.experience.step2.description': '–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –Ω–∞—Å—Ç–æ—è—â–∏—Ö —è—Ö—Ç–µ–Ω–Ω—ã—Ö –≥–æ–Ω–∫–∞—Ö —Å –¥—Ä—É–≥–∏–º–∏ –ª–æ–¥–∫–∞–º–∏, –∏—Å–ø—ã—Ç—ã–≤–∞—è –æ—Å—Ç—Ä—ã–µ –æ—â—É—â–µ–Ω–∏—è –æ—Ç —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π –Ω–∞ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–º –æ–∑–µ—Ä–µ –ì–∞—Ä–¥–∞.',
    'home.experience.step3.description': '–û—Ç–ø—Ä–∞–∑–¥–Ω—É–π—Ç–µ —Å–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Ü–µ—Ä–µ–º–æ–Ω–∏–µ–π –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –º–µ–¥–∞–ª—è–º–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–æ–Ω–æ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç.',
    'form.name': '–ò–º—è',
    'form.email': '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞',
    'form.phone': '–¢–µ–ª–µ—Ñ–æ–Ω',
    'form.message': '–°–æ–æ–±—â–µ–Ω–∏–µ',
    'form.submit': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –°–æ–æ–±—â–µ–Ω–∏–µ',
  },
};

// Load translations with enhanced error handling and retry logic
export const loadTranslations = async (languageCode: string) => {
  try {
    console.log(`Loading translations for language: ${languageCode}`);
    
    const { data, error, isOffline } = await safeQuery(
      () => supabase
        .from('translations')
        .select('key, text')
        .eq('language_code', languageCode),
      []
    );
    
    // Get fallback translations
    const fallbackTranslations = FALLBACK_TRANSLATIONS[languageCode] || FALLBACK_TRANSLATIONS.en;
    
    if (data && data.length > 0 && !isOffline) {
      const translationMap = data.reduce((acc: Record<string, string>, item: Translation) => {
        acc[item.key] = item.text;
        return acc;
      }, {});
      
      // Merge with fallback translations
      const mergedTranslations = { ...fallbackTranslations, ...translationMap };
      
      console.log(`Successfully loaded ${data.length} translations for ${languageCode}`);
      return mergedTranslations;
    } else {
      if (isOffline) {
        console.log(`Working offline - using fallback translations for ${languageCode}`);
      } else {
        console.log(`No translations found for language: ${languageCode}, using fallbacks`);
      }
      return fallbackTranslations;
    }
  } catch (error) {
    console.warn('Error loading translations, using fallbacks:', error);
    
    // Use fallback translations on error
    const fallbackTranslations = FALLBACK_TRANSLATIONS[languageCode] || FALLBACK_TRANSLATIONS.en;
    return fallbackTranslations;
  }
};

// Translation function with fallback
export const createTranslationFunction = (translations: Record<string, string>) => {
  return (key: string, fallback?: string): string => {
    const translation = translations[key];
    if (translation) {
      return translation;
    }
    
    // Try English fallback
    const englishFallback = FALLBACK_TRANSLATIONS.en[key];
    if (englishFallback) {
      return englishFallback;
    }
    
    // Use provided fallback or key itself
    return fallback || key;
  };
};

// Core language hook that manages state - this is used by the LanguageProvider
export const useLanguage = (): LanguageContextType => {
  const [currentLanguage, setCurrentLanguage] = useState<string>('en');
  const [translations, setTranslations] = useState<Record<string, string>>({});
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  // Initialize language on mount
  useEffect(() => {
    const initializeLanguage = async () => {
      try {
        setLoading(true);
        setError(null);
        
        // Try to get saved language from localStorage
        const savedLanguage = localStorage.getItem('preferred-language') || 'en';
        
        // Load translations for the saved language
        const loadedTranslations = await loadTranslations(savedLanguage);
        
        setCurrentLanguage(savedLanguage);
        setTranslations(loadedTranslations);
      } catch (err) {
        console.warn('Failed to initialize language, using fallbacks:', err);
        setError(null); // Don't show error for offline mode
        
        // Fallback to English
        setCurrentLanguage('en');
        setTranslations(FALLBACK_TRANSLATIONS.en);
      } finally {
        setLoading(false);
      }
    };

    initializeLanguage();
  }, []);

  const changeLanguage = async (languageCode: string): Promise<void> => {
    try {
      setLoading(true);
      setError(null);
      
      const loadedTranslations = await loadTranslations(languageCode);
      
      setCurrentLanguage(languageCode);
      setTranslations(loadedTranslations);
      
      // Save to localStorage
      localStorage.setItem('preferred-language', languageCode);
    } catch (err) {
      console.warn('Failed to change language, using fallbacks:', err);
      
      // Still switch to the requested language using fallbacks
      const fallbackTranslations = FALLBACK_TRANSLATIONS[languageCode] || FALLBACK_TRANSLATIONS.en;
      setCurrentLanguage(languageCode);
      setTranslations(fallbackTranslations);
      localStorage.setItem('preferred-language', languageCode);
      
      setError(null); // Don't show error for offline mode
    } finally {
      setLoading(false);
    }
  };

  const t = createTranslationFunction(translations);
  const isRTL = RTL_LANGUAGES.includes(currentLanguage);

  return {
    currentLanguage,
    translations,
    loading,
    error,
    changeLanguage,
    t,
    isRTL,
    supportedLanguages: AVAILABLE_LANGUAGES,
  };
};

// Hook for consuming the context (used by components)
export const useLanguageContext = (): LanguageContextType => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguageContext must be used within a LanguageProvider');
  }
  return context;
};

// Export constants for use in other files
export { AVAILABLE_LANGUAGES, FALLBACK_TRANSLATIONS };

// Export for backward compatibility
export default useLanguageContext;